/**
 * @file WifiConnector.h
 * @brief Clase para manejar la conexi√≥n WiFi en modo estaci√≥n.
 * 
 * Esta clase permite conectar un dispositivo a una red WiFi y obtener informaci√≥n sobre la conexi√≥n.
 */
#ifndef WIFI_CONNECTOR_H
#define WIFI_CONNECTOR_H

// Librer√≠as
#include <WiFi.h>

/**
 * @class WiFiConnector
 * @brief Clase para gestionar la conexi√≥n WiFi.
 * 
 * Proporciona m√©todos para conectarse a una red WiFi y obtener detalles de la conexi√≥n, como el canal, la direcci√≥n IP, el SSID y la intensidad de la se√±al.
 */
class WiFiConnector {
private:
    const char* _ssid; ///< SSID de la red WiFi.
    const char* _password; ///< Contrase√±a de la red WiFi.

public:
    /**
     * @brief Constructor de la clase WiFiConnector.
     * @param ssid SSID de la red WiFi.
     * @param password Contrase√±a de la red WiFi.
     */
    WiFiConnector(const char* ssid, const char* password)
        : _ssid(ssid), _password(password) {}

    /**
     * @brief Conecta el dispositivo a la red WiFi.
     * 
     * Configura el dispositivo en modo estaci√≥n, intenta conectarse a la red especificada y muestra informaci√≥n de la conexi√≥n.
     * 
     * @return true si la conexi√≥n fue exitosa, false en caso contrario.
     */
    bool connect() {
        Serial.println("üîå Iniciando conexi√≥n WiFi...");
 
        WiFi.mode(WIFI_STA);  // Modo estaci√≥n
        WiFi.begin(_ssid, _password);

        unsigned long startAttemptTime = millis();
        const unsigned long timeout = 10000; // 10 segundos

        while (WiFi.status() != WL_CONNECTED && millis() - startAttemptTime < timeout) {
            delay(500);
            Serial.print(".");
        }

        if (WiFi.status() == WL_CONNECTED) {
            Serial.println("\n‚úÖ Conectado a WiFi");
            Serial.print("üì∂ SSID: "); Serial.println(WiFi.SSID());
            Serial.print("üì° Canal: "); Serial.println(WiFi.channel());
            Serial.print("üß† IP local: "); Serial.println(WiFi.localIP());
            return true;
        } else {
            Serial.println("\n‚ùå Error: No se pudo conectar al WiFi");
            return false;
        }
    }

    /**
     * @brief Obtiene el canal de la red WiFi conectada.
     * @return N√∫mero del canal de la red WiFi.
     */
    int getChannel() {
        return WiFi.channel();
    }

    /**
     * @brief Obtiene la direcci√≥n IP local asignada al dispositivo.
     * @return Direcci√≥n IP local.
     */
    IPAddress getIP() {
        return WiFi.localIP();
    }

    /**
     * @brief Obtiene el SSID de la red WiFi conectada.
     * @return SSID de la red WiFi.
     */
    String getSSID() {
        return WiFi.SSID();
    }

    /**
     * @brief Obtiene la intensidad de la se√±al WiFi (RSSI).
     * @return Intensidad de la se√±al en dBm.
     */
    int getRSSI() {
        return WiFi.RSSI();
    }
};

#endif // WIFI_CONNECTOR_H
